export type CopilotSpaceInput = {
  lang: "ja" | "en";
  projectName: string;
  description: string;
  members: string;
  background: string;
  tech: string;
  faqQ: string;
  faqA: string;
  rules: string;
  copilotCmd: string;
};

export function generateCopilotSpaceMd(input: CopilotSpaceInput): string {
  if (input.lang === "ja") {
    return `# üè∑Ô∏è „Éó„É≠„Ç∏„Çß„ÇØ„ÉàÊ¶ÇË¶Å

- „Éó„É≠„Ç∏„Çß„ÇØ„ÉàÂêç: ${input.projectName}
- Ê¶ÇË¶Å: ${input.description}
- ÊãÖÂΩì: ${input.members}

# üß† Ë®≠Ë®àÊÄùÊÉ≥„ÉªËÉåÊôØ

- ${input.background}

# üèóÔ∏è „Ç¢„Éº„Ç≠„ÉÜ„ÇØ„ÉÅ„É£

- ‰ΩøÁî®ÊäÄË°ì: ${input.tech}

# üìù „Çà„Åè„ÅÇ„ÇãË≥™ÂïèÔºàFAQÔºâ

Q: ${input.faqQ}  
A: ${input.faqA}

# ‚öôÔ∏è ÈÅãÁî®„É´„Éº„É´

- ${input.rules
      .split(",")
      .map((r) => r.trim())
      .join("\n- ")}

# ‚úçÔ∏è Copilot ÂëΩ‰ª§

- ${input.copilotCmd}
`;
  } else {
    return `# üè∑Ô∏è Project Overview

- Project Name: ${input.projectName}
- Description: ${input.description}
- Members: ${input.members}

# üß† Design Philosophy / Background

- ${input.background}

# üèóÔ∏è Architecture

- Technologies: ${input.tech}

# üìù Frequently Asked Questions (FAQ)

Q: ${input.faqQ}  
A: ${input.faqA}

# ‚öôÔ∏è Operation Rules

- ${input.rules
      .split(",")
      .map((r) => r.trim())
      .join("\n- ")}

# ‚úçÔ∏è Copilot Instructions

- ${input.copilotCmd}
`;
  }
}
